'phadvAnjain ver 1.2.3
'update:
'1.2.2  find() enhancement
'		tapMode: Dot
'		Find Mode: Color
' 	    Find param: direct
'		RndRange func
'		ShiftXY
'1.2.3  TryFind() = find() TapMode:DoNothing
'		Timer Table(  TimerUpdate(),GetTimerInterval(),isTimeOver() )
'		"s"var  const string / table enum index
'		MsgXy(),Msg()

Randomize
Dim intX,intY,targetX,targetY,targetX2,targetY2
Dim tempBool
Dim lastTapTime = TickCount()

'-------------------------
'Timer Table
Dim Timer,sLastTap
sLastTap = "sLastTap"
Timer = {sLastTap:"0"}
Timer[sLastTap] = TickCount()

Function TimerUpdate(timerName)
	Timer[timerName] = TickCount()
	TimerUpdate = Timer[timerName]
End Function
Function GetTimerInterval(timerName, intervalMs)
	GetTimerInterval = (TickCount() - Timer[timerName]) - intervalMs
End Function
Function isTimeOver(timerName, intervalMs)
	isTimeOver = TickCount() - Timer[timerName] > intervalMs
End Function

'-------------------------
'Find Func String
Dim pic,findRect,tapMode,Rect,dropAB,DoNothing,tapFindXY,fuzzyRate,findDelay,Dot,color,Direct,rand,shiftXY
pic = "pic"
color = "color"
findRect = "findRect"
tapMode = "tapMode"
Rect = "Rect"
Dot = "Dot"
dropAB = "dropAB"
DoNothing = "DoNothing"
tapFindXY = "tapFindXY"
Direct = "Direct"
fuzzyRate = "fuzzyRate"
findDelay = "FindDelay"
rand = "rand"
shiftXY = "shiftXY"
'-----------------------------------------------------------------------------------------
'------------------------------- anjain advance function ---------------------------------
'ex: "Btn_InTheStoryMenu_Skip_793,29,819,60..png" -> 793,29,819,60
Function GetFindPicRangeFromFormattedPicName(picName)
    Dim str1
    str1 = picName
    Dim last_
    last_ = InStrRev(str1, "_", -1)
    Dim dotdotPng
    dotdotPng = InStrRev(str1, "..png", -1,true)
    GetFindPicRangeFromFormattedPicName = Mid(str1,last_+1,dotdotPng-last_-1)
End Function

Function TapIfFind
    If HasFind() Then
        TapFind
    End If
End Function
Function HasFind()
    tempBool = intX > -1 And intY > -1
    HasFind = tempBool
End Function
Sub TapFind
    TapXy intX,intY
End Sub
Sub TapRect(tapX1,tapY1,tapX2,tapY2)
    targetX = tapX1 + (tapX2-tapX1) * Rnd()
    targetY = tapY1 + (tapY2 - tapY1) * Rnd()
    TapXy targetX,targetY
End Sub
Function TryFind(p)
    p[tapMode] = DoNothing
    TryFind = Find(p)
End Function
Function Find(p)
	Dim FindFuncParam '(rect,Name,direct,fuzzyRate)
    Dim picName
    Dim colorName
    Dim find_x1,find_y1,find_x2,find_y2,ArrTemp()
    Dim FindAction
    Dim hasfindTemp
    Dim fuzzyRateTemp
    Dim findDirectTemp
    Dim findDelayTemp
    
	'Read---------------------------------------------------------------
    findDelayTemp = 0
	If p[findDelay] <> null Then 
		findDelayTemp = int(p[findDelay])
	End If
	
    'Condition--------------------------------------------------------
    fuzzyRateTemp = 0.9
    findDirectTemp = 1
    
    'search target --------------------------------------
    If p[pic] <> null Then 
        picName = p[pic]
        FindFuncParam = FindFuncParam + 0100

    	If p[findRect] = null Then 
			p[findRect] = GetFindPicRangeFromFormattedPicName(picName)
    	End If
    End If

    If p[color] <> null Then 
    	colorName = p[color]
    	FindFuncParam = 0200
    End If
    
    'search locate and config ----------------------------
    If p[findRect] <> null Then 
    	FindAction = findRect
        ArrTemp = SplitComma(p[findRect])
        If UBound(ArrTemp) = 3 Then 
        	find_x1 = ArrTemp(0)
        	find_y1 = ArrTemp(1)
        	find_x2 = ArrTemp(2)
        	find_y2 = ArrTemp(3)
        	FindFuncParam = FindFuncParam + 1000
        ElseIf UBound(ArrTemp) = 1 Then 
        	find_x1 = ArrTemp(0)
        	find_y1 = ArrTemp(1)
        	find_x2 = ArrTemp(0)
        	find_y2 = ArrTemp(1)
        	FindFuncParam = FindFuncParam + 1000
        Else 
        	TracePrint "Error: picName FindRect Not Match :" & picName
        End If
    End If
    
    If p[fuzzyRate] <> null Then 
    	fuzzyRateTemp = p[fuzzyRate] + 0.0
        FindFuncParam = FindFuncParam + 0001
    End If
    If p[Direct] <> null Then 
    	'0 2
    	' 1 
    	'3 4
    	If p[Direct] = rand Then 
    		findDirectTemp = RndRange(0,4)
    	Else 
    		findDirectTemp = p[Direct]
    	End If
        FindFuncParam = FindFuncParam + 0010
    End If
    
    If p[pic] <> null Then
    	FindPicFunc find_x1, find_y1, find_x2, find_y2, picName, findDirectTemp, fuzzyRateTemp
    ElseIf p[color] <> null Then
    	FindColorFunc find_x1, find_y1, find_x2, find_y2, colorName, findDirectTemp, fuzzyRateTemp
	End If
	
	'Action-----------------------------------------------------------
	Dim tap_x1,tap_y1,tap_x2,tap_y2
	If p[Rect] <> null Then 
        ArrTemp = SplitComma(p[Rect])
        tap_x1 = ArrTemp(0)
        tap_y1 = ArrTemp(1)
        tap_x2 = ArrTemp(2)
        tap_y2 = ArrTemp(3)
        FindAction = Rect
	End If
	If p[dropAB] <> null Then 
        ArrTemp = SplitComma(p[dropAB])
        tap_x1 = ArrTemp(0)
        tap_y1 = ArrTemp(1)
        tap_x2 = ArrTemp(2)
        tap_y2 = ArrTemp(3)
        FindAction = dropAB
	End If
	If p[Dot] <> null Then 
        ArrTemp = SplitComma(p[Dot])
        tap_x1 = ArrTemp(0)
        tap_y1 = ArrTemp(1)
        FindAction = Dot
	End If
	If p[shiftXY] <> null Then 
		FindAction = shiftXY
	End If
	
	'override FindAction
	If p[tapMode] <> null Then 
		FindAction = p[tapMode]
	End If
	
	hasfindTemp = HasFind()
	If hasfindTemp Then 
		Select Case FindAction
			Case findRect
				TapRect find_x1, find_y1, find_x2, find_y2
			Case Rect
				TapRect tap_x1, tap_y1, tap_x2, tap_y2
			Case dropAB
				SwipeAB tap_x1, tap_y1, tap_x2, tap_y2, 100
			Case Dot
				TapXy tap_x1, tap_y1
			Case tapFindXY
				TapFind
			Case shiftXY
        		ArrTemp = SplitComma(p[shiftXY])
				intX = intX + ArrTemp(0)
				intY = intY + ArrTemp(1)
				TapFind
			Case DoNothing
				'DoNothing
			Case Else
				TracePrint "Error: FindAction= " & FindAction
		End Select
		Delay findDelayTemp
	End If
	
	Find = hasfindTemp
End Function
Function ReadIntParam(strParam1)
	ReadIntParam = null
	If strParam1 <> null Then 
		ReadIntParam = int(strParam1)
	End If
End Function

'-----------------------------------------------------------------------------------------
'----------------------------------- anjain Base API -------------------------------------
Function SplitComma(str1)
	SplitComma = Split(str1,",")
End Function
Function SplitArrStr(str1)
	SplitArrStr = Split(str1,"|")
End Function

Function FindColorFunc(x1, y1, x2, y2, colorName,direct,fuzzyRate)
    FindColorFunc = False
    FindColor x1, y1 ,x2 ,y2 , colorName,direct,fuzzyRate,intX,intY
    If intX > -1 And intY > -1 Then 
        TracePrint Now() & " Find " & colorName & " " & intX & "," & intY
        FindColorFunc = True
    End If
End Function
Function FindPicFunc(x1,y1,x2,y2,picName,direct,fuzzyRate)
    FindPicFunc = False
    FindPic x1, y1 ,x2 ,y2 ,  "Attachment:" & picName, "000000", direct, fuzzyRate, intX, intY
    If intX > -1 And intY > -1 Then 
        TracePrint Now() & " Find " & picName & " " & intX & "," & intY
        FindPicFunc = True
    End If
End Function

Sub TapXy(tapX, tapY)
    targetX = int(tapX + 5 * Rnd())
    targetY = int(tapY + 5 * Rnd())
    Dim WakuUpTimeMS
    WakuUpTimeMS = 10 + Sqr(TickCount() - lastTapTime) * 10 * Rnd()
    Delay WakuUpTimeMS
    Tap targetX, targetY
    lastTapTime = TickCount()
    TracePrint "Tap " & targetX & "," & targetY
    Delay 10 + 15 * Rnd()
End Sub
Sub SwipeAB(swipeAx,swipeAy,swipeBx,swipeBy,keepTimeMs)
    if keepTimeMs = 0 
        keepTimeMs = 100
    end if
    targetX = int(swipeAx + 5 * Rnd())
    targetY = int(swipeAy + 5 * Rnd())
    targetX2 = int(swipeBx + 5 * Rnd())
    targetY2 = int(swipeBy + 5 * Rnd())
    Dim WakuUpTimeMS
    WakuUpTimeMS = 10 + Sqr(TickCount() - lastTapTime) * 10 * Rnd()
    Delay WakuUpTimeMS
    Swipe targetX, targetY, targetX2, targetY2, keepTimeMs
    lastTapTime = TickCount()
    TracePrint "Swipe " & targetX & "," & targetY & " to " &  targetX2 & "," & targetY2 & ",keepMs:" & keepTimeMs
    Delay 10 + 15 * Rnd()
End Sub

Sub PrintIfFind(msgStr)
    If intX > -1 And intY > -1 Then
        TracePrint msgStr
    End If
End Sub
Sub Msg(msgStr, showMs, posStrXY)
	Dim posX,posY,ArrTemp
    If posStrXY <> null Then 
        ArrTemp = SplitComma(posStrXY)
        If UBound(ArrTemp) = 1 Then 
        	posX = ArrTemp(0)
        	posY = ArrTemp(1)
       	End If
    End If
    
    If posY <> null Then 
		ShowMessage msgStr, showMs, posX, posY
	else
		ShowMessage msgStr, showMs
    End If
	TracePrint msgStr
End Sub
Sub MsgXy(msgStr,showMs,posX,posY)
	ShowMessage msgStr, showMs, posX, posY
	TracePrint msgStr
End Sub
Sub DelayRnd(BaseDelay,RndDelay)
    Delay BaseDelay + RndDelay*Rnd()
End Sub
Function RndRange(min,max)
	RndRange = Int((max - min + 1) * Rnd() + min)
End Function


'-----------------------------------------------------------------------------------------
// Main Loop

Dim NavWp(),NavWpTime(),NavWpDelay(),NavWpCount,NavWpIndex
Dim MoveUp,MoveDown,MoveLeft,MoveRight,MoveLU,MoveRU,MoveLD,MoveRD
Dim sMoveC12,sMoveC01,sMoveC02,sMoveC03,sMoveC04,sMoveC05,sMoveC06,sMoveC07,sMoveC08,sMoveC09,sMoveC10,sMoveC11,sNone
PlayerControlInit()

Dim UI_navConfig,UI_navTimeRate,UI_tapNoteTime,UI_getGoldTime,UI_getAPTime,UI_clearHokoraTime,UI_isCheckTower,UI_openApp,UI_hokoraCount,UI_hokoraCountDown,UI_checkDispatchTime
UiInit()

Dim IsHokoraScrollOnTop,IsHokoraScrollAtBot
QuestParaInit()

Dim NavMode,NavPlan,   _MapTravel,_WayPoint
_MapTravel = "MapTravel"
_WayPoint = "WayPoint"
Dim MapTravelCount
MapTravelCount = 0
Dim FindTravelTargetTimes = 0
Dim FindTravelTargetX = 470
Dim FindTravelTargetY = 70
Dim TapTravelTargetX_I = 170
Dim TapTravelTargetX_D = 170
Dim FindTargetMode = 0
Dim FindLoopTimes = 0

Dim _Map1_D1Area
_Map1_D1Area = "Map1_D1Area"


'Timer -------------------------------------------------------------
Dim sCurLoopTime,sLastQC,sLastGetMoney,sLastGetAp,sClearNote
Dim sMenuOpen
sCurLoopTime = "sCurLoopTime"
sLastQC = "sLastQC"
sLastGetMoney = "sLastGetMoney"
sLastGetAp = "sLastGetAp"
sClearNote = "sClearNote"
sMenuOpen = "sMenuOpen"
TimerUpdate(sLastQC)
TimerUpdate(sLastGetMoney)
TimerUpdate(sLastGetAp)
TimerUpdate(sClearNote)

'stats flag ---------------------------------------------------------
Dim RunQuickClear,TowerClear,ContinuQC,TowerCount,HasCheckedDispatch
RunQuickClear = false
TowerClear = 0
TowerCount = CInt(ReadUIConfig("towerCount","0"))
ContinuQC = False
HasCheckedDispatch = False

Dim BattleCount,BattleStat,sBattleEnd,sInBattle
BattleCount = 0
Dim curNavBattleCount = 0
BattleStat = null
sBattleEnd = "sBattleEnd"
sInBattle = "sInBattle"

Dim sMsgPos_MapDown,sMsgPos_MapDown2
sMsgPos_MapDown = "784,184"
sMsgPos_MapDown2 = "784,244"


Function TestFunc()
    Dim tmp1
    tmp1 = "Test"
    
    
    
    '-----------------------------
    Rem TestStart
    '-----------------------------
    
    ' "914D67-111111|6CFDFF-222222|862369-111111"
    
    

    Delay 2000
    '-----------------------------
    Goto TestStart
    EndScript
End Function

Dim CommonDelay,CommonDelayRnd
CommonDelay = 800
CommonDelayRnd = 100

'Open Game
If UI_openApp = true then
	RunApp "com.square_enix.android_googleplay.grimmsechoes"
End If



NavEventInit
NavPlan_Map1_D1Area 
While true
	'debug------------------------
    'TestFunc()
    
	'NavMode = _WayPoint
	'-----------------------------
	TimerUpdate(sCurLoopTime)
	KeepCapture 
    
	If False Then
	'Battle
	ElseIf Tryfind({pic:"Battle_PauseBtn_907,27,925,49..png"}) Then
		BattleStat = sInBattle
	ElseIf find({pic:"Battle_PauseContinueBtn_559,309,619,342..png"}) Then
		
	'BattleEnd or other result
	ElseIf find({pic:"BattleEnd_ResultExp_877,277,896,297..png"}) Then
		If BattleStat = sInBattle Then 
			BattleCount = BattleCount + 1
			curNavBattleCount = curNavBattleCount + 1
			BattleStat = sBattleEnd
			Msg("BattleCount:" & BattleCount & ",btl/min:" & Round(BattleCount/(TickCount()/60000),2),5000,sMsgPos_MapDown)
		End If
		DelayRnd 600, 100
		TapIfFind
		DelayRnd 300, 100
		TapIfFind
		DelayRnd 300, 100
		TapIfFind
	ElseIf find({pic:"BattleResult_300,65,369,71..png"}) Then
		If BattleStat = sInBattle Then 
			BattleCount = BattleCount + 1
			curNavBattleCount = curNavBattleCount + 1
			BattleStat = sBattleEnd
			Msg("BattleCount:" & BattleCount & ",btl/min:" & Round(BattleCount/(TickCount()/60000),2),5000,sMsgPos_MapDown)
		End If
    	DelayRnd 3000, 100
	
	'global
	ElseIf find({pic:"DailyQuestResult_576,344,671,389..png"}) Then 
	ElseIf find({pic:"GetChest_446,338,518,359..png"}) Then 
	ElseIf find({pic:"ChestList_278,207,346,231..png"}) Then
	ElseIf find({pic:"ApFullOK_468,380,497,419..png"}) Then
	ElseIf find({pic:"News_Close_766,48,787,68..png"}) Then
	ElseIf find({pic:"Result_Touch_531,492,562,513..png", Dot:"46,108"}) Then
	ElseIf find({pic:"NewChar_700,314,741,351..png"}) Then
	ElseIf find({pic:"CharStarUpStar_355,30,444,106..png"}) Then
	ElseIf find({pic:"CharStarUpDef_307,310,373,342..png"}) Then
	ElseIf find({pic:"GetNewChar_703,313,736,347..png"}) Then
	ElseIf find({pic:"NotSupportGooglePlay_657,283,712,316..png"}) Then
	ElseIf find({pic:"DataDownloadWindow_355,134,602,179..png", Dot:"613,399"}) Then
	ElseIf find({pic:"GetGooglePlayService_248,196,467,238..png", Dot:"405,123" }) Then
	ElseIf find({pic:"LoginScreenIcon_28,369,90,430..png", Dot:"457,457"}) Then	
	ElseIf find({pic:"NewGachaOverlay_601,214,642,247..png"}) Then
	ElseIf find({pic:"NewGachaOverlay_606,136,637,162..png"}) Then
	ElseIf find({pic:"NewHeroQuestCloseBtn_811,40,857,77..png"}) Then	
		
		
	
	
	
	
	
    'Login
	ElseIf find({pic:"LoginBound_261,51,554,102..png"}) Then
	 	TowerClear = 0
	 	CheckDispatchTimeInit
	ElseIf find({pic:"SpLogin_353,57,538,107..png"}) Then
	 	TowerClear = 0
	 	CheckDispatchTimeInit
	ElseIf find({pic:"SpLogin_810,416,891,485..png"}) Then
	 	TowerClear = 0
	 	CheckDispatchTimeInit
	ElseIf find({pic:"DailyQuestList_727,157,784,174.png",Dot:"33,37"}) Then 
	ElseIf find({pic:"NextDay_440,226,504,250..png",Dot:"490,398"}) Then 
	 	TowerClear = 0
		CheckDispatchTimeInit
	'--------------------------------------
    'QuickMenu Get AP/Money
    ElseIf SubScript_GetMoney() then
    ElseIf SubScript_GetAp() Then
    
    ElseIf SubScript_PartyNote() then

    'QuickClear ------------------------------------------------------
    'OpenMenu
    'QuickTimer - OpenMenu
    ElseIf (RunQuickClear Or isTimeOver(sLastQC, UI_clearHokoraTime*60000)) And _
     Find({pic:"Hud_MenuOnBtn_895,483,925,509..png"}) then
        RunQuickClear = True
        DelayRnd 2000, 500
    ElseIf (CInt(DateTime.Format("%m%d%H%M")) >= UI_checkDispatchTime And HasCheckedDispatch = False And UI_checkDispatchTime <> 0) And _
     Find({pic:"Hud_MenuOnBtn_895,483,925,509..png"}) then
     	DelayRnd 2000, 500
    ElseIf UI_tapNoteTime > 0 And isTimeOver(sClearNote, UI_tapNoteTime * 60000) And Find({pic:"Hud_MenuOnBtn_895,483,925,509..png"}) Then
    	DelayRnd 2000, 500
    'MenuHasBeenOpen
    ElseIf TryFind({pic:"Hud_MenuOffBtn_896,485,924,509..png"}) Then
    	If False Then 
    	ElseIf CInt(DateTime.Format("%m%d%H%M")) >= UI_checkDispatchTime And HasCheckedDispatch = False
    		TapXy 748, 433
    		DelayRnd 1000, 100
    		TapXy 794, 313    		
        ElseIf UI_tapNoteTime > 0 And isTimeOver(sClearNote,UI_tapNoteTime*60000) then
     		TimerUpdate(sClearNote)
    		TracePrint "Menu Select Party: Note"
        	DelayRnd 1000,100
    		TapXy(70,437)
        	DelayRnd 1000, 100
    	ElseIf RunQuickClear And UI_clearHokoraTime > 0 then
     		TimerUpdate(sLastQC)
    		TracePrint "Menu Select QuestBoard"
        	DelayRnd 1000,100
    		TapXy(242,434)
        	DelayRnd 1000, 100
        ElseIf Timer[sMenuOpen] = null Then
        	TimerUpdate(sMenuOpen)
        ElseIf isTimeOver(sMenuOpen, 7000) Then
        	Find ({pic:"Hud_MenuOffBtn_896,485,924,509..png"})
        	Timer[sMenuOpen] = null
        End If
    ElseIf SubScript_QuestBoard() Then
    
    ElseIf SubScript_Dispatch() Then
		HasCheckedDispatch = True
	ElseIf SubScript_Shop() Then
		
    'Nav  -----------------  
    ElseIf NavMode = _MapTravel Then
    	find ({pic:"NewGachaOverlay_601,214,642,247..png"})
    	find ({pic:"NewGachaOverlay_606,136,637,162..png"})
    	find ({pic:"NewHeroQuestCloseBtn_811,40,857,77..png"})
    	MapTravel (_Map1_D1Area)
    ElseIf NavMode = _WayPoint And isHudOn() And isHudMapPlayerHasFound() Then 
    	If NavWpRun() = False Then 
            'Nav End   reStart Nav
    		NavPlan_Map1_D1Area 
    	Else 
    		'DelayRnd 100,100
    		Goto EndLoopWithOutDelay
    	End If
	'nav end -----------------


    End If

    Rem EndLoop
    
    DelayRnd -GetTimerInterval(sCurLoopTime,CommonDelay), CommonDelayRnd
    'DelayRnd CommonDelay, CommonDelayRnd
    Rem EndLoopWithOutDelay
    ReleaseCapture
Wend
EndScript


'--------------------------------------------------

'Sub script
Function SubScript_Shop()
    SubScript_Shop = true
    
    Dim IsGoldShop = TryFind({pic:"Shop_Gold_808,96,893,125..png"})
    
    // Shop
	//  1 3 ...
	//  2 4 ...
    Dim C14,C24,C34,C44,C10,C20,C30,C40
    If IsGoldShop Then 
		C14 = TryFind({pic:"Shop_Gold_C14_188,150,196,160..png"})
    	C24 = TryFind({pic:"Shop_Gold_C24_189,318,196,328..png"})
    	C34 = TryFind({pic:"Shop_Gold_C34_347,150,354,160..png"})
    	C44 = TryFind({pic:"Shop_Gold_C44_347,318,354,328..png"})
    	C10 = TryFind({pic:"Shop_Gold_C10_175,150,182,160..png"})
    	C20 = TryFind({pic:"Shop_Gold_C20_175,318,182,328..png"})
    	C30 = TryFind({pic:"Shop_Gold_C30_334,150,340,160..png"})
    	C40 = TryFind({pic:"Shop_Gold_C40_334,318,340,328..png"})
	End If

	If False Then 
    ElseIf TryFind({pic:"Shop_Buy_542,423,588,452..png"}) Then
    	If Find({pic:"Shop_Plus_Btn_587,322,616,351..png"}) Then 
    	ElseIf Find({pic:"Shop_Buy_542,423,588,452..png"}) Then
    	End If
    //ElseIf IsGoldShop And Find({pic:"Shop_Gold_5_169,283,378,475..png", fuzzyRate:"0.8", tapMode:tapFindXY}) Then
    
    ElseIf IsGoldShop And C14 And Not C10 Then
    	TapXy 153,213
    ElseIf IsGoldShop And C24 And Not C20 Then
    	TapXy 147,377
    ElseIf IsGoldShop And C34 And Not C30 Then
    	TapXy 314,208
    ElseIf IsGoldShop And C44 And Not C40 Then
    	TapXy 307, 390
    	
    //ExitShop
    ElseIf IsGoldShop _ 
    	And (Not C14 Or C10) _ 
    	And (Not C24 Or C20) _ 
    	And (Not C34 Or C30) _ 
    	And (Not C44 Or C40) Then
    	TapXy 36,27
    Else
        SubScript_Shop = false
	End If
End Function


Function SubScript_Dispatch()
    SubScript_Dispatch = true
	If False Then 
    ElseIf Find({pic:"Dispatch_Clear_310,162,345,193..png", Dot:"910,475" }) Then
    ElseIf Find({pic:"ExpResult_337,61,362,83..png"}) Then
    ElseIf Find({pic:"Dispatch_Red_313,160,343,190..png",Dot:"36,39"}) Then
    ElseIf Find({pic:"Dispatch_Blue_313,160,343,190..png", Dot:"36,39"}) Then
   	ElseIf Find({pic:"All_Complete_Window_376,210,571,242..png", Dot:"607,403"}) Then
    Else
        SubScript_Dispatch = false
	End If
End Function


Function SubScript_PartyNote()
    SubScript_PartyNote = true
    If isPartyPage() Then 
        If UI_tapNoteTime > 0 Then
            DelayRnd 500, 100
            TracePrint "swipe Note Start"
            For i = 86 To 300 Step 34
                If isPartyPage() then
//                    SwipeAB 71, i, 868, i, 2000
                    
                    TouchDown 71, i, 1
					TouchMove 868, i, 1
					Delay 500
					TouchUp 1
                End If
                DelayRnd 200, 100
            Next
            ShowMessage "Note clear"
            TracePrint "swipe Note End"
            DelayRnd 500, 100
        End If
        
        'Exit PartyPage
        TapXy 35,21
        DelayRnd 3000, 100
    Else
        SubScript_PartyNote = false
    End If
End Function

Function SubScript_GetMoney()
    SubScript_GetMoney = false
	If UI_getGoldTime > 0 Then 
        If isTimeOver(sLastGetMoney,UI_getGoldTime*60000) And _  
        find({pic:"Hud_GetMoney_880,341,913,374..png"}) then
		    SubScript_GetMoney = true
            TimerUpdate(sLastGetMoney)
            TracePrint "GetMoney"
            DelayRnd 8000, 2000
        End if
	End If
End Function
Function SubScript_GetAP()
    SubScript_GetAP = false
    If UI_getAPTime > 0 Then
        If isTimeOver(sLastGetAp,UI_getAPTime*60000) And _  
        find({pic:"Hud_GetAp_883,402,914,431..png"}) then
            SubScript_GetAP = true
            TimerUpdate(sLastGetAp)
            TracePrint "GetAp"
            DelayRnd 8000, 2000
        End if
    End If
End Function

Function SubScript_QuestBoard()
    SubScript_QuestBoard = true
    'Select QuestBoard
    If false then
	ElseIf TryFind({pic:"QuestBoard_Main_805,66,880,99..png"}) Then
        If TowerClear < TowerCount And UI_isCheckTower = True  then
            TracePrint "QuestBoard Select Tower"
            TapXy(867,323)
        Else
            TracePrint "QuestBoard Select Hokora"
            TapXy(875,265)
        End If
        DelayRnd 2000,500
        
    'Tower QuickClear
    ElseIf TryFind({pic:"QuestBoard_Tower_816,311,886,337..png"}) Then
    	RunQuickClear = true
    	Msg("TowerClear:" & TowerClear,2000,sMsgPos_MapDown)
        If false Then 
        ElseIf Find({pic:"TowerListFreeTime_479,158,512,180..png", Dot:"912,472"}) Then
        ElseIf Find({pic:"All_Complete_Window_376,210,571,242..png", Dot:"607,403"}) Then
        Else 
    		Msg("Tower Not Found",3000,sMsgPos_MapDown)
        	TowerClear = TowerCount
        	TapXy(882,80)
        End if
        DelayRnd 3000,100

    'Hokora QuickClear
    ElseIf TryFind({pic:"QuestBoard_Hokora_816,251,889,276..png"}) Then
        If TryFind({pic:"Hokora_HasEnegry2_488,24,507,41..png"}) Then 
        	RunQuickClear = true
        	If Find({pic:"HokoraQC_624,444,685,465..png"}) Then 
//        	ElseIf TryFind({pic:"Hokora_SelectScrollBot_1_304,158,321,187..png"}) Then 
//        		TracePrint "hokora"
        	ElseIf TryFind({color:"DDFDFF-222222", findRect:"784,168,788,172"}) Then
        		TracePrint "hokora"
        		IsHokoraScrollOnTop = True
            	//TapXy(517,174)
            ElseIf IsHokoraScrollOnTop = True And Not(TryFind({pic:"HokoraRule_202,115,252,139..png"}))  Then
//            	TapXy (411, 245) //2
//            	TapXy (456, 388) //4
				QuickClearHokora(UI_hokoraCount, UI_hokoraCountDown)
        	ElseIf IsHokoraScrollOnTop = False
        		TracePrint "hokora Roll scroll"
        		SwipeAB (581, 192, 588, 457, 100)
//            	SwipeAB(581,457,588,192,100)
//				TapXy 411, 245
        	End if
        Else 
        	TracePrint "hokora last 1 enegry , exit board"
        	RunQuickClear = False
        	IsHokoraScrollOnTop = False
        	TapXy(40,34)
        End If
        DelayRnd 1000,500
    ElseIf TryFind({pic:"QuestBoard_Main_BG_826,65,873,100..png"}) then
        If false Then 
        ElseIf Find({pic:"TowerQC_NoCostConfirm_481,192,531,216..png",Dot:"605,391"}) then
        ElseIf Find({pic:"HokoraQC_Confirm_570,387,640,414..png"}) then
        End If
        DelayRnd 1000,500
    Else
        SubScript_QuestBoard = false
    End If
End Function



'--------------------------------------------------
'Nav config
Sub NavRestart
	NavEventInit
	NavPlan_Map1_D1Area
End Sub
Sub NavPlan_Map1_D1Area
	NavPlan = _Map1_D1Area
	NavMode = _MapTravel
	NavWPConfig_Map1_D1Area 
End Sub

Sub NavWPConfig_Map1_D1Area
    Dim NavWpStruct
    
    If UI_navConfig = 1 Then 
    	NavWpStruct = Array(	_
			MoveDown,	1000,	100,	_
			MoveDown,	600,	100,	_
			MoveLeft,	200,	100,	_
			MoveRight,	200,	100,	_
			MoveRight,	200,	100,	_
			MoveRD,		1000,	100,	_
			MoveDown,	200,	100,	_
			MoveUp,		200,	100,	_
			MoveRight,	300,	100,	_
			MoveRight,	1900,	100,	_
			MoveUp,		300,	100,	_
			MoveLeft,	200,	100,	_
			MoveRight,	200,	100,	_
			MoveUp,		1300,	100,	_
			sMoveC03,	500,	100,	_
			sMoveC07,	700,	100,	_
			sNone,		0,		0		)
	ElseIf UI_navConfig = 2 Then
    	NavWpStruct = Array(	_
			sMoveC12,	1500,	100,	_
			sMoveC09,	100,	100,	_
			sMoveC09,	100,	100,	_
			sMoveC09,	100,	100,	_
			sMoveC03,	1700,	100,	_
			sMoveC03,	100,	100,	_
			sMoveC12,	100,	100,	_
			sMoveC03,	100,	100,	_
			sMoveC03,	100,	100,	_
			sMoveC02,	1200,	100,	_
			sMoveC12,	100,	100,	_
			sMoveC12,	100,	100,	_
			sMoveC12,	100,	100,	_
			sMoveC12,	100,	100,	_
			sMoveC09,	100,	100,	_
			sMoveC09,	100,	100,	_
			sMoveC09,	100,	100,	_
			sMoveC09,	100,	100,	_
			sMoveC09,	100,	100,	_
			sMoveC09,	2700,	100,	_
			sMoveC12,	100,	100,	_
			sMoveC09,	100,	100,	_
			sMoveC09,	100,	100,	_
			sMoveC09,	100,	100,	_
			sMoveC06,	2000,	100,	_
			sNone,		0,		0		)
    ElseIf UI_navConfig = 3 Then
    	NavWpStruct = Array(	_
			sMoveC03 ,	1300,	100,	_
			sMoveC12 ,	200,	100,	_
			sMoveC12 ,	100,	100,	_
			sMoveC12 ,	100,	100,	_
			sMoveC03 ,	1300,	100,	_
			sMoveC12 ,	100,	100,	_
			sMoveC12 ,	100,	100,	_
			sMoveC12 ,	100,	100,	_
			sMoveC03 ,	1800,	100,	_
			sMoveC06 ,	200,	100,	_
			sMoveC06 ,	200,	100,	_
			sMoveC06 ,	100,	100,	_
			sMoveC03 ,	400,	100,	_
			sMoveC03 ,	400,	100,	_
			sMoveC03 ,	400,	100,	_
			sMoveC02 ,	1600,	100,	_
			sMoveC12 ,	400,	100,	_
			sMoveC06 ,	400,	100,	_
			sNone,		0,		0		)  	
	ElseIf UI_navConfig = 4 Then
    	NavWpStruct = Array(	_
			sMoveC03 ,	1400,	100,	_
			sMoveC06 ,	100,	100,	_
			sMoveC06 ,	100,	100,	_
			sMoveC06 ,	100,	100,	_
			sMoveC02 ,	4000,	100,	_
			sMoveC03 ,	100,	100,	_
			sMoveC03 ,	100,	100,	_
			sMoveC03 ,	100,	100,	_
			sMoveC03 ,	4000,	100,	_
			sMoveC06 ,	2300,	100,	_
			sMoveC03 ,	100,	100,	_
			sMoveC03 ,	100,	100,	_
			sNone,		0,		0		)
	ElseIf UI_navConfig = 5 Then
		NavWpStruct = Array(	_
			sMoveC07 ,	2000,	100,	_
			sMoveC09 ,	1300,	200,	_
			sMoveC06 ,	100,	100,	_
			sMoveC06 ,	100,	100,	_
			sMoveC06 ,	100,	100,	_
			sMoveC06 ,	100,	100,	_
			sMoveC06 ,	100,	100,	_
			sMoveC09 ,	4000,	100,	_
			sMoveC12 ,	800,	100,	_
			sMoveC03 ,	100,	100,	_
			sMoveC03 ,	100,	100,	_
			sMoveC10 ,	100,	100,	_
			sMoveC10 ,	100,	100,	_
			sMoveC10 ,	100,	100,	_
			sNone,		0,		0		)
	ElseIf UI_navConfig = 6 Then
		NavWpStruct = Array(	_
			sMoveC06 ,	500,	100,	_
			sMoveC09 ,	300,	200,	_
			sMoveC12 ,	200,	100,	_
			sMoveC09 ,	2000,	100,	_
			sMoveC12 ,	200,	100,	_
			sMoveC12 ,	200,	100,	_
			sMoveC10 ,	500,	100,	_
			sMoveC10 ,	500,	100,	_
			sMoveC10 ,	900,	100,	_
			sMoveC12 ,	700,	100,	_
			sMoveC09 ,	400,	100,	_
			sMoveC03 ,	400,	100,	_
			sNone,		0,		0		)
    Else 
    	NavWpStruct = Array(	_
			sNone,		0,		0		)
    End If


	NavWpStructConfig (NavWpStruct)
	
	'test func:  reset nav if monster all killed
	Dim monsterCount = 4
	HockNavEvent_Reset_IfNavBattleCount(monsterCount)
End Sub

Sub NavWPConfig_ClockTest
    Dim NavWpStruct
	NavWpStruct = Array(	_
sMoveC01,	1000,	1000,	_
sMoveC02,	1000,	1000,	_
sMoveC03,	1000,	1000,	_
sMoveC04,	1000,	1000,	_
sMoveC05,	1000,	1000,	_
sMoveC06,	1000,	1000,	_
sMoveC07,	1000,	1000,	_
sMoveC08,	1000,	1000,	_
sMoveC09,	1000,	1000,	_
sMoveC10,	1000,	1000,	_
sMoveC11,	1000,	1000,	_
sMoveC12,	1000,	1000,	_
sNone,		0,		0		)
	NavWpStructConfig(NavWpStruct)
'todo: 
'sMapTravel sNavEnd  sGotoIndex  sRevertMove sRepeatMove sMoveIfFindTarget
 '   Dim BattleEndGoto
 '   BattleEndGoto = Array(	_
'minIdx, maxIdx flag        value  cmd         value  
'2,	     5,	    sTraBtl,    2,     sGotoIdx,    12	_
'               sTolBtl            sNavEnd
'              sInRangeBtl
'              
')

End Sub
'-----------------------------------------------------------------------------------------
'nav Event
Sub NavEventInit
    NavEventEnable_Reset_IfNavBattleCount = False
    NavEventParam_battleLimit = 0
End Sub


Dim NavEventEnable_Reset_IfNavBattleCount
Dim NavEventParam_battleLimit
Function HockNavEvent_Reset_IfNavBattleCount(battleLimit)
	NavEventEnable_Reset_IfNavBattleCount = true
	navEventParam_battleLimit = battleLimit
End Function
Function NavEvent_Reset_IfNavBattleCount()
	NavEvent_Reset_IfNavBattleCount = false
	If NavEventEnable_Reset_IfNavBattleCount Then 
		If curNavBattleCount >= navEventParam_battleLimit Then 
			NavRestart 
    		Msg("Area clear , Nav Restart",3000,sMsgPos_MapDown)
		End If
	End If
End Function




'-----------------------------------------------------------------------------------------
'nav plan And Player control

Function NavWpStructConfig(navWpStruct)
	Dim navWpStructCount
	navWpStructCount = Ubound(navWpStruct) + 1
	TracePrint "Load NavWpStructConfig WpCount: " & navWpStructCount
    NavWpCount = navWpStructCount / 3
    NavWpIndex = 0
    TracePrint "-----------------NavWpCount" & NavWpCount
    
	Dim j
	For i = 0 To NavWpCount-1
		j = i*3
		NavWp(i) = navWpStruct(j)
    	NavWpTime(i) = navWpStruct(j+1)
    	NavWpDelay(i) = navWpStruct(j+2)
	Next
End Function

Function NavWpRun
	NavWpRun = true
	If NavWpIndex <= NavWpCount Then 
		Dim tmpBM
		tmpBM = Round(BattleCount / (TickCount() / 60000), 1)
		Dim curNavKeepTime = NavWpTime(NavWpIndex)*UI_navTimeRate
		Dim curNavDelay = NavWpDelay(NavWpIndex)*UI_navTimeRate
		TracePrint UI_navTimeRate
		Msg "Wp:" & NavWpIndex & "," & NavWp(NavWpIndex) & ",keep:" & curNavKeepTime & " [" & tmpBM & "]b/m", curNavDelay, sMsgPos_MapDown
		PlayerMove(NavWp(NavWpIndex),curNavKeepTime)
        Delay curNavDelay
        NavWpIndex = NavWpIndex + 1
	Else 
		NavWpRun = false
    	NavWpCount = 0
    	NavWpIndex = 0
	End If
End Function

Function MapTravel(mapTravelTarget)
    TracePrint _MapTravel & " : " & _Map1_D1Area
	If isHudOn() Then 
    	TracePrint "OpenMap"
		find({color:"0EB624", findRect:"842,86,868,112", fuzzyRate:0.9}) 
		'TapXy 852, 90
		DelayRnd 1000,100
	ElseIf find({pic:"MapCloseBtn_797,20,866,80..png", tapMode:DoNothing}) Then 
		Dim travelTargetPic
		travelTargetPic = "MapTravel_" & mapTravelTarget & "..png"
		
		If FindTravelTargetTimes < 5 Then 
			If find({color:"FFCC56|AA7011|FFE983|FFF686|FFF388|FFED83", findRect:"124,80,798,472", TapMode:tapFindXY, fuzzyRate:0.9}) Then 
    			TracePrint "found MapTravel target"
    			FindTravelTargetTimes = FindTravelTargetTimes + 1
			End If
		Else 
			If FindTravelTargetY > 470 Then 
				FindTravelTargetY = 70
				
				If FindTargetMode = 2 Or FindTargetMode = 0 Then 
					FindLoopTimes = FindLoopTimes + 1	
				End If
				
				If FindTargetMode = 0 Or FindTargetMode = 2 Then 
					FindTargetMode = 1
					TapTravelTargetX_I = FindTravelTargetX + 50 * FindLoopTimes
				ElseIf FindTargetMode = 1 Then
					FindTargetMode = 2
					TapTravelTargetX_D = FindTravelTargetX - 50 * FindLoopTimes
				End If
				
			End If
		
			If FindTargetMode = 0 Then 
				Tap FindTravelTargetX, FindTravelTargetY
			ElseIf FindTargetMode = 1 Then
				Tap TapTravelTargetX_I, FindTravelTargetY
			ElseIf FindTargetMode = 2 Then
				Tap TapTravelTargetX_D, FindTravelTargetY
			End If
			
			FindTravelTargetY = FindTravelTargetY + 50
		End If
		
		
		DelayRnd 500, 100

	ElseIf find({pic:"MapCloseBtnBG_797,20,866,80..png", tapMode:DoNothing}) Then 
		If find({pic:"MapTravel_Confirm_441,229,561,245..png", Dot:"599,395"}) Then 
			FindTravelTargetTimes = 0
			FindTravelTargetX = 470
			FindTravelTargetY = 70
			FindLoopTimes = 0
			FindTargetMode = 0
			
			Msg("MapTravel_Confirm, NavTimeRate:" & Round(UI_navTimeRate*100) & "%",1500,sMsgPos_MapDown)
			NavMode = _WayPoint
    		MapTravelCount=MapTravelCount+1
			curNavBattleCount = 0
		End If
		DelayRnd 2000, 200
	Else 
		TracePrint "MapTravel Nothing Found"
	End If
	ShowMessage "Run:" & Round(TickCount() / 60000, 2) & "m" & "NavCount:" & MapTravelCount, 500, 219, 438
End Function


Sub PlayerControlInit()
    MoveUp="MoveUp"
    MoveDown="MoveDown"
    MoveLeft="MoveLeft"
    MoveRight="MoveRight"
    MoveLU="MoveLU"
    MoveRU="MoveRU"
    MoveLD="MoveLD"
    MoveRD = "MoveRD"
    sMoveC12="sMoveC12"
	sMoveC01="sMoveC01"
	sMoveC02="sMoveC02"
	sMoveC03="sMoveC03"
	sMoveC04="sMoveC04"
	sMoveC05="sMoveC05"
	sMoveC06="sMoveC06"
	sMoveC07="sMoveC07"
	sMoveC08="sMoveC08"
	sMoveC09="sMoveC09"
	sMoveC10="sMoveC10"
	sMoveC11="sMoveC11"
    sNone = "sNone"
End Sub
Sub UiInit()
	UI_navConfig = UiInputCheck("navConfig")
	UI_navTimeRate = UiInputCheck("navTimeRate")
	If UI_navTimeRate <= 0 Then 
		UI_navTimeRate = 1.0
	Else 
		UI_navTimeRate = UI_navTimeRate / 100.0
	End If
	UI_tapNoteTime = UiInputCheck("tapNoteTime")
	UI_getGoldTime = UiInputCheck("getGoldTime")
	UI_getAPTime = UiInputCheck("getAPTime")
	UI_clearHokoraTime = UiInputCheck("clearHokoraTime")
	UI_isCheckTower = UiInputCheck("isCheckTower")
	UI_openApp = UiInputCheck("openApp")
	UI_hokoraCount = CInt(ReadUIConfig("hokoraCount", "0"))
	UI_hokoraCountDown = CInt(ReadUIConfig("hokoraCountDown", "0"))
	CheckDispatchTimeInit
End Sub
Sub CheckDispatchTimeInit
	UI_checkDispatchTime = ReadUIConfig("checkDispatchTime", "")
	If UI_checkDispatchTime <> "" Then 
		If CInt(UI_checkDispatchTime) < CInt(DateTime.Format("%H%M")) Then 
			UI_checkDispatchTime = CInt(DateTime.Format("%m%d", Time() + 86400) & UI_checkDispatchTime)
		Else 
			UI_checkDispatchTime = CInt(DateTime.Format("%m%d") & UI_checkDispatchTime)
		End If
	Else
		UI_checkDispatchTime = 0
		HasCheckedDispatch = True
	End If
End Sub
Sub QuestParaInit()
	IsHokoraScrollOnTop = False
	IsHokoraScrollAtBot = False
End Sub
Function UiInputCheck(uiName)
    Dim UiInputTmp = ReadUIConfig(uiName)
    If UiInputTmp = "" Or UiInputTmp = null Then 
		UiInputCheck = 0
	ElseIf UiInputTmp = True or UiInputTmp = False Then
		UiInputCheck = UiInputTmp
	Else 
		UiInputCheck = CInt(UiInputTmp)
	End If
End Function
Function PlayerMove(moveDirect,KeepTime)
    Dim CenterX,CenterY,SwipeTargetX,SwipeTargetY
    CenterX = 497
    CenterY = 262
    SwipeTargetX = CenterX
    SwipeTargetY = CenterY
    Select Case moveDirect
    Case MoveUp
        SwipeTargetY = SwipeTargetY - 200
    Case MoveDown
        SwipeTargetY = SwipeTargetY + 200
    Case MoveLeft
        SwipeTargetX = SwipeTargetX - 200
    Case MoveRight
        SwipeTargetX = SwipeTargetX + 200
    Case MoveLU
        SwipeTargetY = SwipeTargetY - 200
        SwipeTargetX = SwipeTargetX - 200
    Case MoveRU
        SwipeTargetY = SwipeTargetY - 200
        SwipeTargetX = SwipeTargetX + 200
    Case MoveLD
        SwipeTargetY = SwipeTargetY + 200
        SwipeTargetX = SwipeTargetX - 200
    Case MoveRD
        SwipeTargetY = SwipeTargetY + 200
        SwipeTargetX = SwipeTargetX + 200
    Case sMoveC01
        SwipeTargetX = SwipeTargetX + 108
        SwipeTargetY = SwipeTargetY - 180
    Case sMoveC02
        SwipeTargetX = SwipeTargetX + 184
        SwipeTargetY = SwipeTargetY - 104
    Case sMoveC04
        SwipeTargetX = SwipeTargetX + 180
        SwipeTargetY = SwipeTargetY + 108
    Case sMoveC05
        SwipeTargetX = SwipeTargetX + 108
        SwipeTargetY = SwipeTargetY + 180
    Case sMoveC07
        SwipeTargetX = SwipeTargetX - 104
        SwipeTargetY = SwipeTargetY + 184
    Case sMoveC08
        SwipeTargetX = SwipeTargetX - 180
        SwipeTargetY = SwipeTargetY + 108
    Case sMoveC10
        SwipeTargetX = SwipeTargetX - 184
        SwipeTargetY = SwipeTargetY - 104
    Case sMoveC11
        SwipeTargetX = SwipeTargetX - 100
        SwipeTargetY = SwipeTargetY - 180
    Case sMoveC03
        SwipeTargetX = SwipeTargetX + 200
    Case sMoveC06
        SwipeTargetY = SwipeTargetY + 200
    Case sMoveC09
        SwipeTargetX = SwipeTargetX - 200
    Case sMoveC12
        SwipeTargetY = SwipeTargetY - 200
    Case sNone
        Exit Function
    End Select
    TracePrint "Player Move : " & moveDirect & " , Ms:" & KeepTime
	SwipeAB(CenterX,CenterY, SwipeTargetX, SwipeTargetY, KeepTime)
End Function


'-----------------------------------------------------------------------------------------
'UI Detect
Function isPartyPage()
	isPartyPage = TryFind({pic:"PartyPage_77,10,271,62..png"})
End Function
Function isHudOn()
	isHudOn = true
	If False 
	ElseIf find({pic:"NavIcon_29,33,57,58..png", tapMode:DoNothing}) Then
	ElseIf find({pic:"NavIcon2_39,37,57,55..png", tapMode:DoNothing}) Then
	ElseIf find({pic:"NavIcon3_37,36,60,61..png", tapMode:DoNothing}) Then
	ElseIf find({pic:"NavIcon4_41,38,59,60..png", tapMode:DoNothing}) Then
	ElseIf find({pic:"NavIcon5_39,38,60,58..png", tapMode:DoNothing}) Then
	ElseIf find({pic:"Hud_MenuOnBtn_895,483,925,509..png", tapMode:DoNothing}) Then
	Else
		isHudOn = False
	End If
End Function
Function isHudMapPlayerHasFound()
	isHudMapPlayerHasFound = true
	If TryFind({color:"0EB624", findRect:"842,86,868,112", fuzzyRate:0.9}) then
	Else
		isHudMapPlayerHasFound = False
	End If
End Function

'-----------------------------------------------------------------------------------------
'Quick Clear Hokora
Sub QuickClearHokora(count, countDown)
	If count = 0 And countDown = 0 Then 
		count = 1
	End If
	
	If count <> 0 Then 
		Dim swipeCount
		swipeCount = Int((count - 1) / 5)
		
		If swipeCount > 0 Then 
			SwipeHokoraPage swipeCount
			DelayRnd 600, 300
		End If
		
		If Int((count - 1) Mod 5) = 0 Then 
			TapXy 459, 150
		ElseIf Int((count - 1) Mod 5) = 1 Then
			TapXy 459, 220
		ElseIf Int((count - 1) Mod 5) = 2 Then
			TapXy 459, 290
		ElseIf Int((count - 1) Mod 5) = 3 Then
			TapXy 459, 360
		ElseIf Int((count - 1) Mod 5) = 4 Then
			TapXy 459, 430
		End If
	End If
	
	If countDown = 1 Then
		If TryFind({color:"DDFDFF-222222", findRect:"784,434,788,438"}) Then 
		 	Delay 2000
			TapXy 507, 412
		Else 
			SwipeAB 556, 438, 556, 20, 100
		End If
	ElseIf countDown = 2 Then
		If TryFind({color:"DDFDFF-222222", findRect:"784,434,788,438"}) Then 
			Delay 2000
			TapXy 518, 337
		Else 
			SwipeAB 556, 438, 556, 20, 100
		End If
	ElseIf countDown = 3 Then
		If TryFind({color:"DDFDFF-222222", findRect:"784,434,788,438"}) Then 
			Delay 2000
			TapXy 529, 273
		Else 
			SwipeAB 556, 438, 556, 20, 100
		End If
	ElseIf countDown = 4 Then	
		If TryFind({color:"DDFDFF-222222", findRect:"784,434,788,438"}) Then 
			Delay 2000
			TapXy 545, 198
		Else 
			SwipeAB 556, 438, 556, 20, 100
		End If
	ElseIf countDown = 5 Then
		If TryFind({color:"DDFDFF-222222", findRect:"784,434,788,438"}) Then 
			Delay 2000
			TapXy 510, 136
		Else 
			SwipeAB 556, 438, 556, 20, 100
		End If
	End If
End Sub

Sub SwipeHokoraPage(swipeCount)
	For swipeCount
		TouchDown 551, 439, 1
		TouchMove 551, 91, 1
		Delay 1000
		TouchUp 1
	Next
End Sub